# sane defaults
set -sg escape-time 0
set -g default-terminal "screen-256color"
set-option -ga terminal-overrides ",xterm-256color:Tc"
set -g history-limit 10000
set -g base-index 1
set-option -g focus-events on
set -g mouse off

# master key rebinding
unbind C-b
set -g prefix C-a
bind a send-prefix
bind b send-prefix

# spliting pane
unbind '"'
unbind %
bind '\' split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# new window in current directory
bind c new-window -c "#{pane_current_path}"

# aggresive resize
setw -g aggressive-resize on

# vi mode keys
set -g status-keys vi
set-window-option -g mode-keys vi

# reload tmux config fast
bind r source-file ~/.tmux.conf

# copy hack for wsl
set-option -s set-clipboard off
bind P paste-buffer
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X rectangle-toggle
unbind -T copy-mode-vi Enter
if-shell -b 'test -n "$WSLENV"' 'bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel clip.exe'
if-shell -b 'test -n "$WSLENV"' 'bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel clip.exe'

# easy resize panels
bind H resize-pane -L 10
bind L resize-pane -R 10
bind J resize-pane -D 10
bind K resize-pane -U 10

bind l next-window
bind h previous-window


bind -n C-h run "(~/builds/tmux/bin/tmux display-message -p '#{pane_current_command}' | grep -iq vim && ~/builds/tmux/bin/tmux send-keys C-h) || ~/builds/tmux/bin/tmux select-pane -L"
bind -n C-j run "(~/builds/tmux/bin/tmux display-message -p '#{pane_current_command}' | grep -iq vim && ~/builds/tmux/bin/tmux send-keys C-j) || ~/builds/tmux/bin/tmux select-pane -D"
bind -n C-k run "(~/builds/tmux/bin/tmux display-message -p '#{pane_current_command}' | grep -iq vim && ~/builds/tmux/bin/tmux send-keys C-k) || ~/builds/tmux/bin/tmux select-pane -U"
bind -n C-l run "(~/builds/tmux/bin/tmux display-message -p '#{pane_current_command}' | grep -iq vim && ~/builds/tmux/bin/tmux send-keys C-l) || ~/builds/tmux/bin/tmux select-pane -R"
bind -n C-\\ run "(~/builds/tmux/bin/tmux display-message -p '#{pane_current_command}' | grep -iq vim && ~/builds/tmux/bin/tmux send-keys 'C-\\') || ~/builds/tmux/bin/tmux select-pane -l"


# send and join panes
bind p switch-client -T sendPaneBindings
bind -T sendPaneBindings j command-prompt -p "join pane from:"  "join-pane -h -s '%%'"
bind -T sendPaneBindings s command-prompt -p "send pane to:"  "join-pane -h -t '%%'"

# reset window counter
set-option -g renumber-windows on

# toggle tmux status bar
bind b set -g status

# mouse mode and vim mode
set -g mouse on

# auto-renameing window off
set-option -g allow-rename off

### status bar ###
set -g status-style bg=default
set -g status-interval 1
set -g status-justify centre
set -g status-left-length "80"
set -g status-left ' #[fg=#b8bb26,nobold,noitalics,nounderscore]#(whoami)#[fg=#458588,bold] Â» #[fg=#b8bb26,nobold]#S#[default]'
set -g status-right '#[fg=#fbf1c7,bold]%H:%M %Y-%m-%d '

# default window
set-window-option -g window-status-format '#[fg=#a89984,nobold]#I:#W#[default] '
set-window-option -g window-status-current-format '#[fg=#cc241d,nobold]#I:#W#[default] '

# messages
set-option -g message-style fg=colour223,bg=default

# pane border color
set-option -g pane-active-border-style fg='#cc242d',bg=default
set-option -g pane-border-style fg='colour223',bg=default

# floating pane stuff
bind M-f if-shell -F '#{==:#{session_name},floating}' {
    detach-client
} {
    set -gF '@last_session_name' '#S'
    popup -d '#{pane_current_path}' -E -xC -yC -w90% -h90%  '~/builds/tmux/bin/tmux new -A -s floating'
}

bind ! if-shell -F '#{!=:#{session_name},floating}' {
    break-pane
} {
    run-shell 'bash -c "~/builds/tmux/bin/tmux break-pane -s floating -t \"$(~/builds/tmux/bin/tmux show -gvq '@last_session_name'):\""'
}

bind @ if-shell -F '#{!=:#{session_name},floating}' {
    break-pane -d
} {
    run-shell 'bash -c "~/builds/tmux/bin/tmux break-pane -d -s floating -t \"$(~/builds/tmux/bin/tmux show -gvq '@last_session_name'):\""'
}
