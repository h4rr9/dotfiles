#!/bin/sh
export EDITOR=/home/h4rr9/builds/neovim/bin/nvim
export VISUAL=topen
export LANGUAGE=en_US.UTF-8
export LANG=en_US.UTF-8
export LC_CTYPE=en_US.UTF-8 

HISTSIZE=1000000
SAVEHIST=1000000

export PATH=$HOME/.local/bin:$PATH
export PATH=$HOME/.cargo/bin:$PATH
export PATH=$HOME/.local/share/go/bin:$PATH
export PATH=$HOME/builds/neovim/bin:$PATH
export PATH=$HOME/builds/libxml2-2.9.13:$PATH
export PATH=$HOME/builds/tmux/bin:$PATH
export PATH=$HOME/builds/lua-language-server/bin:$PATH
export PATH=$PATH:./node_modules/.bin
export PATH=/usr/local/texlive/2021/bin/x86_64-linux:$PATH
#export PATH=$HOME/.pyenv/bin/:$PATH

export MANPAGER='nvim +Man!'
export MANWIDTH=999

export GOPATH=$HOME/.local/share/go
export GOROOT=/usr/local/go
export PATH=$GOROOT/bin:$PATH
export PATH=$GOPATH/bin:$PATH
export GOPATH=$GOPATH:/home/h4rr9/go


export BAT_THEME="gruvbox-dark"
export _ZO_DATA_DIR=$HOME/.local/share

export GPG_AGENT_INFO=$HOME/.gnupg/S.gpg-agent:0:1
export GPG_TTY=$TTY

# fnm
export PATH=/home/h4rr9/.fnm:$PATH
eval "`fnm env`"

# init zoxide
eval "$(zoxide init zsh)"

# gpg daemon
if [[ ! -a ~/.gnupg/S.gpg-agent ]]; then
    eval  $(gpg-agent --daemon --options ~/.gnupg/gpg-agent.conf) > /dev/null

fi

# haskell
[ -f "/home/h4rr9/.ghcup/env" ] && source "/home/h4rr9/.ghcup/env" # ghcup-env

# zettelkasten editor
export ZK_EDITOR='nvim'

# pyenv

# Try to find pyenv, if it's not on the path
export PYENV_VIRTUALENV_DISABLE_PROMPT=1
export PYENV_ROOT="${PYENV_ROOT:=${HOME}/.pyenv}"

if ! type pyenv > /dev/null && [ -f "${PYENV_ROOT}/bin/pyenv" ]; then
    export PATH="${PYENV_ROOT}/bin:${PATH}"
fi

# Lazy load pyenv
if type pyenv > /dev/null; then
    export PATH="${PYENV_ROOT}/bin:${PYENV_ROOT}/shims:${PATH}"
    function pyenv() {
        unset -f pyenv
        eval "$(command pyenv init -)"
        eval "$(command pyenv virtualenv-init -)"
        pyenv $@
    }
fi

# for gWSL
export DISPLAY=$(route.exe print | grep 0.0.0.0 | head -1 | awk '{print $4}'):0.0
