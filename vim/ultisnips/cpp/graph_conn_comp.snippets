snippet kosaraju "Kosaraju for SCC" b
void primary_dfs(int node, vt<int> adj[], vt<bool> &visited,
                 vt<int> &processed) {
    if (visited[node])
        return;
 
    visited[node] = true;
    EACH(c_node, adj[node])
    primary_dfs(c_node, adj, visited, processed);
 
    processed.pb(node);
}
 
void secondary_dfs(int node, vt<int> adj[], vt<bool> &visited,
                   vt<int> &component) {
 
    if (visited[node])
        return;
 
    visited[node] = true;
    component.pb(node);
 
    EACH(c_node, adj[node])
    secondary_dfs(c_node, adj, visited, component);
}
 
void kosaraju(int n, vt<int> adj[], vt<vt<int>> &scc) {
 
    vt<bool> visited(n, false);
    vt<int> processed;
 
    FOR(n)
    if (!visited[i]) {
        primary_dfs(i, adj, visited, processed);
    }
 
    vt<int> rev_adj[n];
 
    FOR(node, n)
    EACH(c_node, adj[node])
    rev_adj[c_node].pb(node);
 
    reverse(all(processed));
    fill(all(visited), false);
 
    EACH(node, processed) {
 
        vt<int> component;
        if (!visited[node])
            secondary_dfs(node, rev_adj, visited, component);
        if (sz(component))
            scc.pb(component);
    }
}
endsnippet
